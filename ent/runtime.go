// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/s14t284/simplebank/ent/account"
	"github.com/s14t284/simplebank/ent/entry"
	"github.com/s14t284/simplebank/ent/schema"
	"github.com/s14t284/simplebank/ent/transfer"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accountFields := schema.Account{}.Fields()
	_ = accountFields
	// accountDescCreatedAt is the schema descriptor for created_at field.
	accountDescCreatedAt := accountFields[3].Descriptor()
	// account.DefaultCreatedAt holds the default value on creation for the created_at field.
	account.DefaultCreatedAt = accountDescCreatedAt.Default.(func() time.Time)
	entryFields := schema.Entry{}.Fields()
	_ = entryFields
	// entryDescCreatedAt is the schema descriptor for created_at field.
	entryDescCreatedAt := entryFields[2].Descriptor()
	// entry.DefaultCreatedAt holds the default value on creation for the created_at field.
	entry.DefaultCreatedAt = entryDescCreatedAt.Default.(func() time.Time)
	transferFields := schema.Transfer{}.Fields()
	_ = transferFields
	// transferDescAmount is the schema descriptor for amount field.
	transferDescAmount := transferFields[2].Descriptor()
	// transfer.AmountValidator is a validator for the "amount" field. It is called by the builders before save.
	transfer.AmountValidator = transferDescAmount.Validators[0].(func(int) error)
	// transferDescCreatedAt is the schema descriptor for created_at field.
	transferDescCreatedAt := transferFields[3].Descriptor()
	// transfer.DefaultCreatedAt holds the default value on creation for the created_at field.
	transfer.DefaultCreatedAt = transferDescCreatedAt.Default.(func() time.Time)
}
