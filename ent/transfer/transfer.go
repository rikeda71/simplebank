// Code generated by entc, DO NOT EDIT.

package transfer

import (
	"time"
)

const (
	// Label holds the string label denoting the transfer type in the database.
	Label = "transfer"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFromAccountID holds the string denoting the from_account_id field in the database.
	FieldFromAccountID = "from_account_id"
	// FieldToAccountID holds the string denoting the to_account_id field in the database.
	FieldToAccountID = "to_account_id"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeFromAccounts holds the string denoting the from_accounts edge name in mutations.
	EdgeFromAccounts = "from_accounts"
	// EdgeToAccounts holds the string denoting the to_accounts edge name in mutations.
	EdgeToAccounts = "to_accounts"
	// Table holds the table name of the transfer in the database.
	Table = "transfers"
	// FromAccountsTable is the table that holds the from_accounts relation/edge.
	FromAccountsTable = "transfers"
	// FromAccountsInverseTable is the table name for the Account entity.
	// It exists in this package in order to avoid circular dependency with the "account" package.
	FromAccountsInverseTable = "accounts"
	// FromAccountsColumn is the table column denoting the from_accounts relation/edge.
	FromAccountsColumn = "from_account_id"
	// ToAccountsTable is the table that holds the to_accounts relation/edge.
	ToAccountsTable = "transfers"
	// ToAccountsInverseTable is the table name for the Account entity.
	// It exists in this package in order to avoid circular dependency with the "account" package.
	ToAccountsInverseTable = "accounts"
	// ToAccountsColumn is the table column denoting the to_accounts relation/edge.
	ToAccountsColumn = "to_account_id"
)

// Columns holds all SQL columns for transfer fields.
var Columns = []string{
	FieldID,
	FieldFromAccountID,
	FieldToAccountID,
	FieldAmount,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
