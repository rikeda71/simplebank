// Code generated by entc, DO NOT EDIT.

package account

import (
	"time"
)

const (
	// Label holds the string label denoting the account type in the database.
	Label = "account"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldOwner holds the string denoting the owner field in the database.
	FieldOwner = "owner"
	// FieldBalance holds the string denoting the balance field in the database.
	FieldBalance = "balance"
	// FieldCurrency holds the string denoting the currency field in the database.
	FieldCurrency = "currency"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeEntries holds the string denoting the entries edge name in mutations.
	EdgeEntries = "entries"
	// EdgeFromTransfers holds the string denoting the from_transfers edge name in mutations.
	EdgeFromTransfers = "from_transfers"
	// EdgeToTransfers holds the string denoting the to_transfers edge name in mutations.
	EdgeToTransfers = "to_transfers"
	// Table holds the table name of the account in the database.
	Table = "accounts"
	// EntriesTable is the table that holds the entries relation/edge.
	EntriesTable = "entries"
	// EntriesInverseTable is the table name for the Entry entity.
	// It exists in this package in order to avoid circular dependency with the "entry" package.
	EntriesInverseTable = "entries"
	// EntriesColumn is the table column denoting the entries relation/edge.
	EntriesColumn = "account_id"
	// FromTransfersTable is the table that holds the from_transfers relation/edge.
	FromTransfersTable = "transfers"
	// FromTransfersInverseTable is the table name for the Transfer entity.
	// It exists in this package in order to avoid circular dependency with the "transfer" package.
	FromTransfersInverseTable = "transfers"
	// FromTransfersColumn is the table column denoting the from_transfers relation/edge.
	FromTransfersColumn = "from_account_id"
	// ToTransfersTable is the table that holds the to_transfers relation/edge.
	ToTransfersTable = "transfers"
	// ToTransfersInverseTable is the table name for the Transfer entity.
	// It exists in this package in order to avoid circular dependency with the "transfer" package.
	ToTransfersInverseTable = "transfers"
	// ToTransfersColumn is the table column denoting the to_transfers relation/edge.
	ToTransfersColumn = "to_account_id"
)

// Columns holds all SQL columns for account fields.
var Columns = []string{
	FieldID,
	FieldOwner,
	FieldBalance,
	FieldCurrency,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// BalanceValidator is a validator for the "balance" field. It is called by the builders before save.
	BalanceValidator func(int) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
